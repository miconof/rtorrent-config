# Maximum and minimum number of peers to connect to per torrent.
#min_peers = 40
max_peers = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
#min_peers_seed = 10
max_peers_seed = 20

# Maximum number of simultanious uploads per torrent.
max_uploads = 2

# Global upload and download rate in KiB. "0" for unlimited.
download_rate = 600
upload_rate = 5

# Default directory to save the downloaded torrents.
directory = /media/WDElementsPlay/Downloads/download

# Default session directory. Make sure you don't run multiple instance
# of rtorrent using the same session directory. Perhaps using a
# relative path?
session = /home/pi/.rtsession

# Group 1 - Auto - seed until .01 or 1M then delete data
group.insert_persistent_view = group_1
group.group_1.ratio.enable=
group.group_1.ratio.max.set=1
group.group_1.ratio.upload.set=1M

# Group 2 - Manual - seed until .01 or 1M then stop torrent
group.insert_persistent_view = group_2
group.group_2.ratio.enable=
group.group_2.ratio.max.set=1
group.group_2.ratio.upload.set=1M

# Watch a directory for new torrents, and stop those that have been deleted.
#sickbeard
schedule = watch_directory_2,10,10,"load_start=/home/pi/repos/Sick-Beard/torrents/*.torrent, d.set_custom1=tv, \"d.set_custom=isauto,/media/WDElementsPlay/Downloads/complete/sickbeard/\""
#schedule = tied_directory_2,10,10,start_tied=
#schedule = untied_director_2,5,5,stop_untied=
#couchpotato
schedule = watch_directory_3,10,10,"load_start=/home/pi/repos/CouchPotatoServer/torrents/*.torrent, d.set_custom1=tv, \"d.set_custom=isauto,/media/WDElementsPlay/Downloads/complete/couchpotato/\""
#schedule = tied_directory_3,10,10,start_tied=
#schedule = untied_directory_3,5,5,stop_untied=
#headphones
schedule = watch_directory_4,10,10,"load_start=/home/pi/repos/headphones/torrents/*.torrent, d.set_custom1=tv, \"d.set_custom=isauto,/media/WDElementsPlay/Downloads/complete/headphones/\""
#schedule = tied_directory_4,10,10,start_tied=
#schedule = untied_directory_4,5,5,stop_untied=
#others
schedule = watch_directory_5,10,10,"load_start=/home/pi/torrents/*.torrent"
#schedule = tied_directory_5,10,10,start_tied=
#schedule = untied_directory_5,5,5,stop_untied=

# Close torrents when diskspace is low.
#schedule = low_diskspace,5,60,close_low_diskspace=5000M

# Set ratio group based on isauto
system.method.set_key = event.download.inserted_new,set_ratio,"branch=d.get_custom=isauto,view.set_visible=group_1,view.set_visible=group_2"

# Set autodir to concatination of isauto and torrent name
system.method.set_key = event.download.inserted_new,set_autodir,"d.set_custom=autodir,\"$cat=$d.get_custom=isauto,$d.get_name=\""

# Set manualdir to concatination of complete dir and label name
system.method.set_key = event.download.inserted_new,set_manualdir,"d.set_custom=manualdir,\"$cat=/media/WDElementsPlay/Downloads/complete/other/,$d.get_custom1=\""

# Set move to dir in movedir
system.method.set_key = event.download.inserted_new,set_movedir,"branch=d.get_custom=isauto,\"d.set_custom=movedir,$d.get_custom=autodir\",\"d.set_custom=movedir,$d.get_custom=manualdir\""

# Delete .torrent
system.method.set_key = event.download.inserted_new,del_tor,"execute={rm,-rf,--,$d.get_loaded_file=}"

# Move torrent data to another folder when download is complete
#system.method.set_key = event.download.finished,move_complete,"execute=mkdir,-p,$d.get_custom=movedir;d.set_directory=$d.get_custom=movedir;execute=mv,-u,$d.get_base_path=,$d.get_custom=movedir"
system.method.set_key = event.download.finished,move_complete,"d.close=;execute=mkdir,-p,$d.get_custom=movedir;execute=mv,-u,$d.get_base_path=,$d.get_custom=movedir;d.erase="

# Set autoseed dirctory if Auto group
#system.method.set_key = event.download.finished,move_dir,"branch=d.get_custom=isauto,d.set_directory=/CHANGE/THIS/PATH/autoseed/"

# Call rtorrentToSickBeard.py if in Auto group
#system.method.set_key = event.download.finished,toSickbeard,"branch=d.get_custom=isauto,\"execute={/root/sickbeard/autoProcessTV/rtorrentToSickBeard.py,$d.get_custom=movedir,$d.get_name=}\""

# Set actions for groups completed ratio
#system.method.set = group.group_1.ratio.command, d.close=, "execute={mv,-u,$d.get_base_path=,/media/WDElementsPlay/Downloads/complete/sickbeard/}", d.erase=
#system.method.set = group.group_2.ratio.command, d.close=, d.erase=

# The ip address reported to the tracker.
#ip = 127.0.0.1
#ip = rakshasa.no

# The ip address the listening socket and outgoing connections is
# bound to.
#bind = 127.0.0.1
#bind = rakshasa.no

# Port range to use for listening.
port_range = 6890-6999

# Start opening ports at a random position within the port range.
#port_random = no

# Check hash for finished torrents. Might be usefull until the bug is
# fixed that causes lack of diskspace not to be properly reported.
#check_hash = no

# Set whetever the client should try to connect to UDP trackers.
#use_udp_trackers = yes

# Alternative calls to bind and ip that should handle dynamic ip's.
#schedule = ip_tick,0,1800,ip=rakshasa
#schedule = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#
# encryption = allow_incoming,enable_retry,prefer_plaintext

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
# 
dht = auto

# UDP port to use for DHT. 
# 
dht_port = 6889

# Enable peer exchange (for torrents not marked private)
#
peer_exchange = yes

#
# Do not modify the following parameters unless you know what you're doing.
#

# Hash read-ahead controls how many MB to request the kernel to read
# ahead. If the value is too low the disk may not be fully utilized,
# while if too high the kernel might not be able to keep the read
# pages in memory thus end up trashing.
#hash_read_ahead = 10

# Interval between attempts to check the hash, in milliseconds.
#hash_interval = 100

# Number of attempts to check the hash while using the mincore status,
# before forcing. Overworked systems might need lower values to get a
# decent hash checking rate.
#hash_max_tries = 10
